{
  "address": "0xB289760720eEfb02d17653b8C3171E7183304AE9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minAmount",
          "type": "uint256"
        }
      ],
      "name": "swapEtherToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd7c90375af90414d1144bdbc383eeffa4d1a79911d91a29434457baa6a0590d2",
  "receipt": {
    "to": null,
    "from": "0xf847EF00fb884f1d24Ef82c6594557490c998F89",
    "contractAddress": "0xB289760720eEfb02d17653b8C3171E7183304AE9",
    "transactionIndex": 22,
    "gasUsed": "657854",
    "logsBloom": "0x
    "blockHash": "0xb333f742d5d5cfbc4894929995f855477e17f64b0c9ce321a1787dbea22df847",
    "transactionHash": "0xd7c90375af90414d1144bdbc383eeffa4d1a79911d91a29434457baa6a0590d2",
    "logs": [],
    "blockNumber": 3386208,
    "cumulativeGasUsed": "1871250",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3339300c04d97205c5b5d70c942935a2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"swapEtherToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapEtherToToken(address,uint256)\":{\"details\":\"swaps the `msg.value` Ether to at least `minAmount` of tokens in `token`, or reverts\",\"params\":{\"minAmount\":\"The minimum amount of tokens to receive\",\"token\":\"The address of the ERC-20 token to swap\"},\"returns\":{\"_0\":\"The actual amount of transferred tokens\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swapEther.sol\":\"swapEther\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\"},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity >=0.6.2;\\n\\nimport './IUniswapV2Router01.sol';\\n\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountETH);\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable;\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d\"},\"contracts/swapEther.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n// 0xB26B2De65D07eBB5E54C7F6282424D3be670E1f0\\n\\ninterface ERC20Swapper {\\n    /// @dev swaps the `msg.value` Ether to at least `minAmount` of tokens in `token`, or reverts\\n    /// @param token The address of the ERC-20 token to swap\\n    /// @param minAmount The minimum amount of tokens to receive\\n    /// @return The actual amount of transferred tokens\\n    function swapEtherToToken(address token, uint minAmount) external payable returns (uint);\\n}\\n\\ncontract swapEther is ERC20Swapper {\\n    // address of the Uniswap V2 Router contract on the Ethereum mainnet\\n    address private constant UNISWAP_ROUTER_ADDRESS = 0xB26B2De65D07eBB5E54C7F6282424D3be670E1f0;\\n    IUniswapV2Router02 private uniswapRouter = IUniswapV2Router02(UNISWAP_ROUTER_ADDRESS);\\n\\n    function swapEtherToToken(\\n        address token,\\n        uint minAmount\\n    ) external payable override returns (uint) {\\n        // make sure the token is not ETH\\n        require(token != address(0), \\\"Invalid token address\\\");\\n\\n        // create the swap path for Uniswap V2\\n        address[] memory path = new address[](2);\\n        path[0] = uniswapRouter.WETH();\\n        path[1] = token;\\n\\n        // approve the token for the router\\n        IERC20(token).approve(UNISWAP_ROUTER_ADDRESS, type(uint).max);\\n\\n        // convert the minimum amount to receive to Wei\\n        uint minAmountInWei = minAmount * 10 ** 18;\\n\\n        // perform the swap\\n        uint[] memory amounts = uniswapRouter.swapExactETHForTokens{value: msg.value}(\\n            minAmountInWei,\\n            path,\\n            msg.sender,\\n            block.timestamp + 3600\\n        );\\n\\n        return (amounts[1]);\\n    }\\n}\\n\",\"keccak256\":\"0xf7a820aeedea0a54b9aaa6af3adc605fb1634c901e290349a4abbb4004532758\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405273b26b2de65d07ebb5e54c7f6282424d3be670e1f06000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50610a8a806100746000396000f3fe60806040526004361061001e5760003560e01c80637a2a045614610023575b600080fd5b61003d600480360381019061003891906104bf565b610053565b60405161004a919061050e565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156100c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bb90610586565b60405180910390fd5b6000600267ffffffffffffffff8111156100e1576100e06105a6565b5b60405190808252806020026020018201604052801561010f5781602001602082028036833780820191505090505b50905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561017857600080fd5b505afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b091906105ea565b816000815181106101c4576101c3610617565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838160018151811061021357610212610617565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663095ea7b373b26b2de65d07ebb5e54c7f6282424d3be670e1f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016102bc929190610655565b602060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e91906106b6565b506000670de0b6b3a7640000846103259190610712565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab534848633610e1042610378919061076c565b6040518663ffffffff1660e01b81526004016103979493929190610880565b6000604051808303818588803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f820116820180604052508101906103ee9190610a0b565b90508060018151811061040457610403610617565b5b6020026020010151935050505092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104568261042b565b9050919050565b6104668161044b565b811461047157600080fd5b50565b6000813590506104838161045d565b92915050565b6000819050919050565b61049c81610489565b81146104a757600080fd5b50565b6000813590506104b981610493565b92915050565b600080604083850312156104d6576104d5610421565b5b60006104e485828601610474565b92505060206104f5858286016104aa565b9150509250929050565b61050881610489565b82525050565b600060208201905061052360008301846104ff565b92915050565b600082825260208201905092915050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b6000610570601583610529565b915061057b8261053a565b602082019050919050565b6000602082019050818103600083015261059f81610563565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000815190506105e48161045d565b92915050565b600060208284031215610600576105ff610421565b5b600061060e848285016105d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61064f8161044b565b82525050565b600060408201905061066a6000830185610646565b61067760208301846104ff565b9392505050565b60008115159050919050565b6106938161067e565b811461069e57600080fd5b50565b6000815190506106b08161068a565b92915050565b6000602082840312156106cc576106cb610421565b5b60006106da848285016106a1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061071d82610489565b915061072883610489565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610761576107606106e3565b5b828202905092915050565b600061077782610489565b915061078283610489565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107b7576107b66106e3565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107f78161044b565b82525050565b600061080983836107ee565b60208301905092915050565b6000602082019050919050565b600061082d826107c2565b61083781856107cd565b9350610842836107de565b8060005b8381101561087357815161085a88826107fd565b975061086583610815565b925050600181019050610846565b5085935050505092915050565b600060808201905061089560008301876104ff565b81810360208301526108a78186610822565b90506108b66040830185610646565b6108c360608301846104ff565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b6108eb826108d1565b810181811067ffffffffffffffff8211171561090a576109096105a6565b5b80604052505050565b600061091d610417565b905061092982826108e2565b919050565b600067ffffffffffffffff821115610949576109486105a6565b5b602082029050602081019050919050565b600080fd5b60008151905061096e81610493565b92915050565b60006109876109828461092e565b610913565b905080838252602082019050602084028301858111156109aa576109a961095a565b5b835b818110156109d357806109bf888261095f565b8452602084019350506020810190506109ac565b5050509392505050565b600082601f8301126109f2576109f16108cc565b5b8151610a02848260208601610974565b91505092915050565b600060208284031215610a2157610a20610421565b5b600082015167ffffffffffffffff811115610a3f57610a3e610426565b5b610a4b848285016109dd565b9150509291505056fea26469706673582212200c377b58c20548bad5bbfc6bec76a1b6f35def182ae972fdd6ec9f17f6748f1564736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061001e5760003560e01c80637a2a045614610023575b600080fd5b61003d600480360381019061003891906104bf565b610053565b60405161004a919061050e565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156100c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bb90610586565b60405180910390fd5b6000600267ffffffffffffffff8111156100e1576100e06105a6565b5b60405190808252806020026020018201604052801561010f5781602001602082028036833780820191505090505b50905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561017857600080fd5b505afa15801561018c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b091906105ea565b816000815181106101c4576101c3610617565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050838160018151811061021357610212610617565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663095ea7b373b26b2de65d07ebb5e54c7f6282424d3be670e1f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016102bc929190610655565b602060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e91906106b6565b506000670de0b6b3a7640000846103259190610712565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab534848633610e1042610378919061076c565b6040518663ffffffff1660e01b81526004016103979493929190610880565b6000604051808303818588803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f820116820180604052508101906103ee9190610a0b565b90508060018151811061040457610403610617565b5b6020026020010151935050505092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104568261042b565b9050919050565b6104668161044b565b811461047157600080fd5b50565b6000813590506104838161045d565b92915050565b6000819050919050565b61049c81610489565b81146104a757600080fd5b50565b6000813590506104b981610493565b92915050565b600080604083850312156104d6576104d5610421565b5b60006104e485828601610474565b92505060206104f5858286016104aa565b9150509250929050565b61050881610489565b82525050565b600060208201905061052360008301846104ff565b92915050565b600082825260208201905092915050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b6000610570601583610529565b915061057b8261053a565b602082019050919050565b6000602082019050818103600083015261059f81610563565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000815190506105e48161045d565b92915050565b600060208284031215610600576105ff610421565b5b600061060e848285016105d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61064f8161044b565b82525050565b600060408201905061066a6000830185610646565b61067760208301846104ff565b9392505050565b60008115159050919050565b6106938161067e565b811461069e57600080fd5b50565b6000815190506106b08161068a565b92915050565b6000602082840312156106cc576106cb610421565b5b60006106da848285016106a1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061071d82610489565b915061072883610489565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610761576107606106e3565b5b828202905092915050565b600061077782610489565b915061078283610489565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107b7576107b66106e3565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107f78161044b565b82525050565b600061080983836107ee565b60208301905092915050565b6000602082019050919050565b600061082d826107c2565b61083781856107cd565b9350610842836107de565b8060005b8381101561087357815161085a88826107fd565b975061086583610815565b925050600181019050610846565b5085935050505092915050565b600060808201905061089560008301876104ff565b81810360208301526108a78186610822565b90506108b66040830185610646565b6108c360608301846104ff565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b6108eb826108d1565b810181811067ffffffffffffffff8211171561090a576109096105a6565b5b80604052505050565b600061091d610417565b905061092982826108e2565b919050565b600067ffffffffffffffff821115610949576109486105a6565b5b602082029050602081019050919050565b600080fd5b60008151905061096e81610493565b92915050565b60006109876109828461092e565b610913565b905080838252602082019050602084028301858111156109aa576109a961095a565b5b835b818110156109d357806109bf888261095f565b8452602084019350506020810190506109ac565b5050509392505050565b600082601f8301126109f2576109f16108cc565b5b8151610a02848260208601610974565b91505092915050565b600060208284031215610a2157610a20610421565b5b600082015167ffffffffffffffff811115610a3f57610a3e610426565b5b610a4b848285016109dd565b9150509291505056fea26469706673582212200c377b58c20548bad5bbfc6bec76a1b6f35def182ae972fdd6ec9f17f6748f1564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "swapEtherToToken(address,uint256)": {
        "details": "swaps the `msg.value` Ether to at least `minAmount` of tokens in `token`, or reverts",
        "params": {
          "minAmount": "The minimum amount of tokens to receive",
          "token": "The address of the ERC-20 token to swap"
        },
        "returns": {
          "_0": "The actual amount of transferred tokens"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 499,
        "contract": "contracts/swapEther.sol:swapEther",
        "label": "uniswapRouter",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IUniswapV2Router02)473"
      }
    ],
    "types": {
      "t_contract(IUniswapV2Router02)473": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      }
    }
  }
}